#!/usr/bin/env perl
#-*- Mode: perl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-

# Common stuff for the ximian-setup-tools backends.
#
# Copyright (C) 2000-2001 Ximian, Inc.
#
# Authors: Hans Petter Jansson <hpj@ximian.com>
#          Arturo Espinosa <arturo@ximian.com>
#          Michael Vogt <mvo@debian.org> - Debian 2.[2|3] support.
#          David Lee Ludwig <davidl@wpi.edu> - Debian 2.[2|3] support.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.


require "___scriptsdir___/general.pl";
require "___scriptsdir___/file.pl";
require "___scriptsdir___/parse.pl";
require "___scriptsdir___/replace.pl";

#
# Tried to split thi, but suffered from indirection fatigue
# before referencing the output hash correctly.
#
sub parse_vars
{
  my ($dir, $section, $i, $spools, @known_options) = @_;

  $$$spools{'lp'}{'lpr'}{'JIM'} = "BOB";

  if (-f $dir . "/$section.cfg") {
      my $j;
      
      print STDERR "Parse vars in section '$i'\n";

      foreach $j (@known_options) {
          print STDERR "option '$j'\n";
          $val = &xst_parse_sh_export ($dir . "/$section.cfg", $j);
          $$$spools{$i}{'rhs-general'}{$j} = $val;
      }
  } else {
      &xst_report_info (96, "No $dir/$section.cfg");
  }
}

sub xst_printcap_read
{
  my ($file, $spool_dir) = @_;
  my ($fd, $found, $spool, $in_spool);
  my (%spools);

  $fd = &xst_open_read_from_names ("$file");
  return undef if !$fd;
    
  $in_spool=0;

  while (<$fd>)
  {
    # We'll be emptying $_ as we "scan".
    chomp;

    if ($in_spool) {
        if (/[ \t]*:([^=#]+)[#=]*(.*):/) {
            $spools{$spool}{'lpr'}{$1} = $2;
        } elsif (/.*\\/) {
            $in_spool = 1;
        } else {
            $in_spool = 0;
        }
    } elsif (/^([A-Za-z]+):\\/) {
        $spool = $1;
        $in_spool = 1;
    }
  }
  
  close $fd;

  foreach $i (keys %spools) {
      my $dir = $spool_dir . $i;

      if (-d ($dir) && -e ($dir . "/filter")) {
          my @known_options;

          $section = "general";
          @known_options = ('DESIRED_TO', 'PAPERSIZE',
                            'PRINTER_TYPE', 'ASCII_TO_PS');

          if (-f $dir . "/$section.cfg") {
              my $j;

              foreach $j (@known_options) {
                  $val = &xst_parse_sh_export ($dir . "/$section.cfg", $j);
                  $spools{$i}{"rhs-$section"}{$j} = $val;
              }
          } else {
              &xst_report_info (96, "No $dir/$section.cfg");
          }

          $section = "postscript";
          @known_options = ('GSDEVICE', 'RESOLUTION',
                            'COLOR', 'PAPERSIZE',
                            'EXTRA_GS_OPTIONS', 'REVERSE_ORDER',
                            'PS_SEND_EOF', 'NUP',
                            'RTFLMAR', 'TOPBOTMAR');

          if (-f $dir . "/$section.cfg") {
              my $j;

              foreach $j (@known_options) {
                  $val = &xst_parse_sh ($dir . "/$section.cfg", $j);
                  $spools{$i}{"rhs-$section"}{$j} = $val;
              }
          } else {
              &xst_report_info (96, "No $dir/$section.cfg");
          }

          $section = "textonly";
          @known_options = ('TEXTONLYOPTIONS', 'CRLFTRANS',
                            'TEXT_SEND_EOF');

          if (-f $dir . "/$section.cfg") {
              my $j;

              foreach $j (@known_options) {
                  $val = &xst_parse_sh ($dir . "/$section.cfg", $j);
                  $spools{$i}{"rhs-$section"}{$j} = $val;
              }
          } else {
              &xst_report_info (96, "No $dir/$section.cfg");
          }

      } else {
          &xst_report_warning (96, "No printtool setup in directory '$i'");
      }
  }

  return \%spools;
}

sub xst_print_conf_get
{
    my %data;
    
    $data = &xst_printcap_read ("$xst_prefix/etc/printcap",
                                "$xst_prefix/var/spool/lpd/");

    return $data;
}

sub xst_print_conf_set
{
  my $values_hash = $_[0];
  my $old_hash;
  my %dist_attrib;
  
  &xst_print_ensure_loopback ($values_hash);

  $old_hash = &xst_print_conf_get ();
#  %dist_attrib = &xst_print_get_replace_table ();
#  $res = &xst_replace_from_table ($dist_attrib{"fn"}, $dist_attrib{"table"},
#                                  $values_hash, $old_hash);
  return $res;
}

1;
