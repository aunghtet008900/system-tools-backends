#!/usr/bin/env perl
#-*- Mode: perl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-

# Common printer configuration functionality.
#
# Copyright (C) 2000-2001 Ximian, Inc.
#
# Authors: Hans Petter Jansson <hpj@ximian.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.


require "___scriptsdir___/general.pl";
require "___scriptsdir___/file.pl";
require "___scriptsdir___/parse.pl";
require "___scriptsdir___/replace.pl";


sub xst_print_conf_get
{
  my (%dist_attrib, %hash, %fn, @printers, $printer);
  my ($dist, $value, $file, $proc);
  my ($i, $j);

  %dist_attrib = &xst_print_get_printer_parse_table ();
  %fn = %{$dist_attrib{"fn"}};
  $proc = $dist_attrib{"printers_get"};
  @printers = &$proc ();

  foreach $i (@printers)
  {
    foreach $j (keys (%fn))
    {
      my $spooldir = "/var/spool/lpd/$i";  # Not flexible, FIXME.

      $value = $fn {$j};
      $value =~ s/\#printer\#/$i/;
      $value =~ s/\#spooldir\#/$spooldir/;
      $ {$dist_attrib{"fn"}}{$j} = $value;
    }

    $printer = &xst_parse_from_table ($dist_attrib{"fn"},
                                      $dist_attrib{"table"});
    $hash {$i} = $printer;
  }

  return \%hash;
}

sub xst_print_conf_set
{
  my ($values_hash) = @_;
  my ($old_hash);
  my (%dist_attrib, %hash, %fn, @printers, $printer);
  my ($dist, $value, $file, $proc);
  my ($i, $j);
  my $res = 0;

  $old_hash = &xst_print_conf_get ();

  %dist_attrib = &xst_print_get_printer_replace_table ();
  %fn = %{$dist_attrib{"fn"}};

  # Remove unspecified printers.

  foreach $i (keys (%$old_hash))
  {
    if (!$$values_hash{$i})
    {
      # TODO: Delete spool dir recursively.
      $proc = $dist_attrib {"printer_remove"};
      &$proc ($fn {'PRINTCAP'}, $i);
    }
  }

  # Change/add printer values as specified.

  foreach $i (keys (%$values_hash))
  {
    foreach $j (keys (%fn))
    {
      my $spooldir = "/var/spool/lpd/$i";  # Not flexible, FIXME.

      $value = $fn {$j};
      $value =~ s/\#printer\#/$i/;
      $value =~ s/\#spooldir\#/$spooldir/;
      $ {$dist_attrib{"fn"}}{$j} = $value;
    }

    my $tmpres = &xst_replace_from_table ($dist_attrib {"fn"},
                                          $dist_attrib {"table"},
                                          $$values_hash {$i},
                                          $$old_hash {$i});

    if ($tmpres < 0) { $res = $tmpres; }
  }

  return $res;
}

sub xst_print_printers_get_rh70
{
  my @printers;

  @printers = &xst_parse_cap_sections ("/etc/printcap");
  return @printers;
}

sub xst_print_printers_get_rh71
{
  my @printers;

  @printers = &xst_parse_xml_child_names ("/etc/alchemist/namespace/printconf/local.adl",
                                          "/adm_context/datatree/printconf/print_queues");
  return @printers;
}

sub xst_print_get_printer_parse_table
{
  my %dist_map =
	(
	  "redhat-7.0" => "redhat-7.0",
	  "redhat-7.1" => "redhat-7.1",
    "debian-2.2" => "redhat-7.0",
		"debian-woody" => "redhat-7.0"
  );

  my %dist_tables =
  (
    "redhat-7.0" =>
	  {
      printers_get => \&xst_print_printers_get_rh70,
	    fn =>
	    {
        PRINTCAP   => "/etc/printcap",
        GENERAL    => "#spooldir#/general.cfg",
        POSTSCRIPT => "#spooldir#/postscript.cfg",
        TEXTONLY   => "#spooldir#/textonly.cfg",
        PRINTER    => "#printer#"
      },
	    table =>
      [
        [ "spooldir",           \&xst_parse_printcap,       [PRINTCAP,  PRINTER],    "sd" ],
        [ "jobsize_max_k",      \&xst_parse_printcap,       [PRINTCAP,  PRINTER],    "mx" ],
        [ "suppress_headers",   \&xst_parse_printcap_bool,  [PRINTCAP,  PRINTER],    "sh" ],
        [ "device",             \&xst_parse_printcap,       [PRINTCAP,  PRINTER],    "lp" ],
        [ "filter",             \&xst_parse_printcap,       [PRINTCAP,  PRINTER],    "if" ],
        [ "papersize",          \&xst_parse_sh_export,      GENERAL,    PAPERSIZE         ],
        [ "type",               \&xst_parse_sh_export,      GENERAL,    PRINTERTYPE       ],
        [ "ascii_to_ps",        \&xst_parse_sh_export_bool, GENERAL,    ASCII_TO_PS       ],
        [ "gsdevice",           \&xst_parse_sh,             POSTSCRIPT, GSDEVICE          ],
        [ "resolution",         \&xst_parse_sh,             POSTSCRIPT, RESOLUTION        ],
        [ "color",              \&xst_parse_sh,             POSTSCRIPT, COLOR             ],
        [ "gs_papersize",       \&xst_parse_sh,             POSTSCRIPT, PAPERSIZE         ],
        [ "gs_options",         \&xst_parse_sh,             POSTSCRIPT, EXTRA_GS_OPTIONS  ],
        [ "ps_send_eof",        \&xst_parse_sh_bool,        POSTSCRIPT, PS_SEND_EOF       ],
        [ "pages_per_sheet",    \&xst_parse_sh,             POSTSCRIPT, NUP               ],
        [ "rt_margin",          \&xst_parse_sh,             POSTSCRIPT, RTLFTMAR          ],
        [ "tb_margin",          \&xst_parse_sh,             POSTSCRIPT, TOPBOTMAR         ],
        [ "text_options",       \&xst_parse_sh,             TEXTONLY,   TEXTONLYOPTIONS   ],
        [ "trans_crlf",         \&xst_parse_sh_bool,        TEXTONLY,   CRLFTRANS         ],
        [ "text_send_eof",      \&xst_parse_sh_bool,        TEXTONLY,   TEXT_SEND_EOF     ]
      ]
    },
    "redhat-7.1" =>
	  {
      printers_get => \&xst_print_printers_get_rh71,
	    fn =>
	    {
        PRINTCONF  => "/etc/alchemist/namespace/printconf/local.adl",
        PRINTER    => "#printer#"
      },
	    table =>
      [
#        [ "spooldir",           \&xst_parse_printcap,       [PRINTCAP,  PRINTER],    "sd" ],
#        [ "jobsize_max_k",      \&xst_parse_printcap,       [PRINTCAP,  PRINTER],    "mx" ],
#        [ "suppress_headers",   \&xst_parse_printcap_bool,  [PRINTCAP,  PRINTER],    "sh" ],
        [ "device",             \&xst_parse_alchemist_print, [PRINTCONF,  PRINTER], "queue_data/local_printer_device" ],
#        [ "papersize",          \&xst_parse_sh_export,      GENERAL,    PAPERSIZE         ],
#        [ "ascii_to_ps",        \&xst_parse_sh_export_bool, GENERAL,    ASCII_TO_PS       ],
        [ "filter_type",        \&xst_parse_alchemist_print, [PRINTCONF, PRINTER], "filter_type" ],
        [ "type",               \&xst_parse_alchemist_print, [PRINTCONF, PRINTER], "queue_type" ],
        [ "printer_id",         \&xst_parse_alchemist_print, [PRINTCONF, PRINTER], "filter_data/printer_id" ],
         [ "gsdevice",           \&xst_parse_alchemist_print, [PRINTCONF, PRINTER], "filter_data/gs_driver" ],
         [ "resolution",         \&xst_parse_alchemist_print_option, [PRINTCONF, PRINTER], "Resolution" ],
#        [ "color",              \&xst_parse_sh,             POSTSCRIPT, COLOR             ],
#        [ "gs_papersize",       \&xst_parse_sh,             POSTSCRIPT, PAPERSIZE         ],
#        [ "gs_options",         \&xst_parse_sh,             POSTSCRIPT, EXTRA_GS_OPTIONS  ],
#        [ "ps_send_eof",        \&xst_parse_sh_bool,        POSTSCRIPT, PS_SEND_EOF       ],
#        [ "pages_per_sheet",    \&xst_parse_sh,             POSTSCRIPT, NUP               ],
#        [ "rt_margin",          \&xst_parse_sh,             POSTSCRIPT, RTLFTMAR          ],
#        [ "tb_margin",          \&xst_parse_sh,             POSTSCRIPT, TOPBOTMAR         ],
#        [ "text_options",       \&xst_parse_sh,             TEXTONLY,   TEXTONLYOPTIONS   ],
#        [ "trans_crlf",         \&xst_parse_sh_bool,        TEXTONLY,   CRLFTRANS         ],
#        [ "text_send_eof",      \&xst_parse_sh_bool,        TEXTONLY,   TEXT_SEND_EOF     ]
      ]
    }
  );

  my $dist = $dist_map{$xst_dist};
  return %{$dist_tables{$dist}} if $dist;

  &xst_report ("platform_no_table", $xst_dist);
  return undef;
}

sub xst_print_get_printer_replace_table
{
  my %dist_map =
	(
	  "redhat-7.0" => "redhat-7.0",
	  "redhat-7.1" => "redhat-7.1",
    "debian-2.2" => "redhat-7.0",
		"debian-woody" => "redhat-7.0"
  );

  my %dist_tables =
  (
    "redhat-7.0" =>
	  {
      printers_get   => \&xst_print_printers_get_rh70,
      printer_remove => \&xst_replace_printcap_remove_printer,
	    fn =>
	    {
        PRINTCAP   => "/etc/printcap",
        GENERAL    => "#spooldir#/general.cfg",
        POSTSCRIPT => "#spooldir#/postscript.cfg",
        TEXTONLY   => "#spooldir#/textonly.cfg",
        PRINTER    => "#printer#"
      },
	    table =>
      [
        [ "spooldir",           \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "sd", "=" ],
        [ "jobsize_max_k",      \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "mx", "#" ],
        [ "suppress_headers",   \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "sh", ""  ],
        [ "device",             \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "lp", "=" ],
        [ "filter",             \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "if", "=" ],
        [ "papersize",          \&xst_replace_sh_export,      GENERAL,    PAPERSIZE              ],
        [ "type",               \&xst_replace_sh_export,      GENERAL,    PRINTERTYPE            ],
        [ "ascii_to_ps",        \&xst_replace_sh_export_bool, GENERAL,    ASCII_TO_PS            ],
        [ "gsdevice",           \&xst_replace_sh,             POSTSCRIPT, GSDEVICE               ],
        [ "resolution",         \&xst_replace_sh,             POSTSCRIPT, RESOLUTION             ],
        [ "color",              \&xst_replace_sh,             POSTSCRIPT, COLOR                  ],
        [ "gs_papersize",       \&xst_replace_sh,             POSTSCRIPT, PAPERSIZE              ],
        [ "gs_options",         \&xst_replace_sh,             POSTSCRIPT, EXTRA_GS_OPTIONS       ],
        [ "ps_send_eof",        \&xst_replace_sh_bool,        POSTSCRIPT, PS_SEND_EOF            ],
        [ "pages_per_sheet",    \&xst_replace_sh,             POSTSCRIPT, NUP                    ],
        [ "rt_margin",          \&xst_replace_sh,             POSTSCRIPT, RTLFTMAR               ],
        [ "tb_margin",          \&xst_replace_sh,             POSTSCRIPT, TOPBOTMAR              ],
        [ "text_options",       \&xst_replace_sh,             TEXTONLY,   TEXTONLYOPTIONS        ],
        [ "trans_crlf",         \&xst_replace_sh_bool,        TEXTONLY,   CRLFTRANS              ],
        [ "text_send_eof",      \&xst_replace_sh_bool,        TEXTONLY,   TEXT_SEND_EOF          ]
      ]
    },
    "redhat-7.1" =>
	  {
      printers_get   => \&xst_print_printers_get_rh71,
      printer_remove => \&xst_replace_printcap_remove_printer,  # FIXME: Replace this.
	    fn =>
	    {
        PRINTCONF  => "/etc/alchemist/namespace/printconf/local.adl",
        PRINTER    => "#printer#"
      },
	    table =>
      [
#        [ "spooldir",           \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "sd", "=" ],
#        [ "jobsize_max_k",      \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "mx", "#" ],
#        [ "suppress_headers",   \&xst_replace_printcap,       [PRINTCAP,  PRINTER],    "sh", ""  ],
        [ "device",             \&xst_replace_alchemist_print, PRINTCONF, PRINTER, "queue_data/local_printer_device/", "STRING" ],
        [ "filter_type",        \&xst_replace_alchemist_print, PRINTCONF, PRINTER, "filter_type", "STRING" ],
        [ "type",               \&xst_replace_alchemist_print, PRINTCONF, PRINTER, "queue_type", "STRING" ],
        [ "printer_id",         \&xst_replace_alchemist_print, PRINTCONF, PRINTER, "filter_data/printer_id", "STRING" ],
#        [ "filter",             \&xst_replace_printcap,        [PRINTCAP,  PRINTER],    "if", "=" ],
#        [ "papersize",          \&xst_replace_sh_export,       GENERAL,    PAPERSIZE              ],
#        [ "ascii_to_ps",        \&xst_replace_sh_export_bool,  GENERAL,    ASCII_TO_PS            ],
        [ "gsdevice",           \&xst_replace_alchemist_print, PRINTCONF, "filter_data/gs_driver", "STRING" ],
        [ "resolution",         \&xst_replace_alchemist_print_option, PRINTCONF, PRINTER, "Resolution", "enum" ]
#        [ "color",              \&xst_replace_sh,              POSTSCRIPT, COLOR                  ],
#        [ "gs_papersize",       \&xst_replace_sh,              POSTSCRIPT, PAPERSIZE              ],
#        [ "gs_options",         \&xst_replace_sh,              POSTSCRIPT, EXTRA_GS_OPTIONS       ],
#        [ "ps_send_eof",        \&xst_replace_sh_bool,         POSTSCRIPT, PS_SEND_EOF            ],
#        [ "pages_per_sheet",    \&xst_replace_sh,              POSTSCRIPT, NUP                    ],
#        [ "rt_margin",          \&xst_replace_sh,              POSTSCRIPT, RTLFTMAR               ],
#        [ "tb_margin",          \&xst_replace_sh,              POSTSCRIPT, TOPBOTMAR              ],
#        [ "text_options",       \&xst_replace_sh,              TEXTONLY,   TEXTONLYOPTIONS        ],
#        [ "trans_crlf",         \&xst_replace_sh_bool,         TEXTONLY,   CRLFTRANS              ],
#        [ "text_send_eof",      \&xst_replace_sh_bool,         TEXTONLY,   TEXT_SEND_EOF          ]
      ]
    }
  );

  my $dist = $dist_map{$xst_dist};
  return %{$dist_tables{$dist}} if $dist;

  &xst_report ("platform_no_table", $xst_dist);
  return undef;
}

1;
