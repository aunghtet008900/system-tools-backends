#!/usr/bin/env perl
#-*- Mode: perl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-

# Common printer configuration functionality.
#
# Copyright (C) 2000-2001 Ximian, Inc.
#
# Authors: Hans Petter Jansson <hpj@ximian.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

require "___scriptsdir___/general.pl";
require "___scriptsdir___/file.pl";
require "___scriptsdir___/parse.pl";
require "___scriptsdir___/replace.pl";

sub xst_print_conf_get
{
  my (%dist_attrib, %hash, %fn, @printers, $printer);
  my ($dist, $value, $file, $proc);
  my ($i, $j);

  %dist_attrib = &xst_print_get_printer_parse_table ();
  %fn = %{$dist_attrib{"fn"}};
  $proc = $dist_attrib{"printers_get"};
  @printers = &$proc ();
  $key = 0;
  
  foreach $i (@printers)
  {
    foreach $j (keys (%fn))
    {
      my $spooldir = "/var/spool/lpd/$i";  # Not flexible, FIXME.

      $value = $fn{$j};
      $value =~ s/\#printer\#/$i/;
      $value =~ s/\#spooldir\#/$spooldir/;
      $ {$dist_attrib{"fn"}}{$j} = $value;
    }

    $printer = &xst_parse_from_table ($dist_attrib{"fn"},
                                      $dist_attrib{"table"});
    $hash{$i} = $printer;
  }

  return \%hash;
}

sub xst_print_conf_set
{
  my $values_hash = $_[0];
  my $old_hash;
  my %dist_attrib;
  
  $old_hash = &xst_print_conf_get ();
#  %dist_attrib = &xst_print_get_replace_table ();
#  $res = &xst_replace_from_table ($dist_attrib{"fn"}, $dist_attrib{"table"},
#                                  $values_hash, $old_hash);
  return $res;
}

sub xst_print_printers_get
{
  my @printers;

  @printers = &xst_parse_cap_sections ("/etc/printcap");
  return @printers;
}

sub xst_print_get_printer_parse_table
{
  my %dist_map =
	(
	  "redhat-7.0" => "redhat-7.0",
	  "redhat-7.1" => "redhat-7.0",
    "debian-2.2" => "redhat-7.0"
  );

  my %dist_tables =
  (
    "redhat-7.0" =>
	  {
      printers_get => \&xst_print_printers_get,
#	    ifaces_get => \&xst_network_sysconfig_ifaces_get_existing,
	    fn =>
	    {
        PRINTCAP   => "/etc/printcap",
        GENERAL    => "#spooldir#/general.cfg",
        POSTSCRIPT => "#spooldir#/postscript.cfg",
        TEXTONLY   => "#spooldir#/textonly.cfg",
        PRINTER    => "#printer#"
      },
	    table =>
      [
        [ "spooldir",           \&xst_parse_cap,            [PRINTCAP,  PRINTER],    "sd" ],
        [ "jobsize_max_k",      \&xst_parse_cap,            [PRINTCAP,  PRINTER],    "mx" ],
        [ "suppress_headers",   \&xst_parse_cap_bool,       [PRINTCAP,  PRINTER],    "sh" ],
        [ "device",             \&xst_parse_cap,            [PRINTCAP,  PRINTER],    "lp" ],
        [ "filter",             \&xst_parse_cap,            [PRINTCAP,  PRINTER],    "if" ],
        [ "papersize",          \&xst_parse_sh_export,      GENERAL,    PAPERSIZE         ],
        [ "type",               \&xst_parse_sh_export,      GENERAL,    PRINTERTYPE       ],
        [ "ascii_to_ps",        \&xst_parse_sh_export_bool, GENERAL,    ASCII_TO_PS       ],
        [ "gsdevice",           \&xst_parse_sh,             POSTSCRIPT, GSDEVICE          ],
        [ "resolution",         \&xst_parse_sh,             POSTSCRIPT, RESOLUTION        ],
        [ "color",              \&xst_parse_sh,             POSTSCRIPT, COLOR             ],
        [ "gs_papersize",       \&xst_parse_sh,             POSTSCRIPT, PAPERSIZE         ],
        [ "gs_options",         \&xst_parse_sh,             POSTSCRIPT, EXTRA_GS_OPTIONS  ],
        [ "ps_send_eof",        \&xst_parse_sh_bool,        POSTSCRIPT, PS_SEND_EOF       ],
        [ "pages_per_sheet",    \&xst_parse_sh,             POSTSCRIPT, NUP               ],
        [ "rt_margin",          \&xst_parse_sh,             POSTSCRIPT, RTLFTMAR          ],
        [ "tb_margin",          \&xst_parse_sh,             POSTSCRIPT, TOPBOTMAR         ],
        [ "text_options",       \&xst_parse_sh,             TEXTONLY,   TEXTONLYOPTIONS   ],
        [ "trans_crlf",         \&xst_parse_sh_bool,        TEXTONLY,   CRLFTRANS         ],
        [ "text_send_eof",      \&xst_parse_sh_bool,        TEXTONLY,   TEXT_SEND_EOF     ]
      ]
    }
  );

  my $dist = $dist_map{$xst_dist};
  return %{$dist_tables{$dist}} if $dist;

  # FIXME: This is a fatal error, and should make us bail.
  return undef;
}

1;
