#!/usr/bin/env perl
#-*- Mode: perl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-

# Functions for getting service descriptions.
#
# Copyright (C) 2002 Ximian, Inc.
#
# Authors: Carlos Garnacho Parro <garnacho@tuxerver.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.


# This function extracts known names and descriptions from the description hash
sub xst_service_list_get_info
{
	my ($service) = @_;
	my (%service_description_list);
	my $desc;

	# This is the hash that describes all the known services
	%service_description_list = 
	(
    # please, keep this list sorted
		# service => [long_name, description]
		"apache"            =>	[ "web server", "" ],
		"cron"              =>	[ "daemon to execute scheduled commands", "" ],
		"cupsys"            =>	[ "Common Unix Printing System", "" ],
    "fam"               =>  [ "file alteration monitor", "" ],
    "gdm"               =>	[ "GNOME Display Manager", "gdm provides the GNOME equivalent of a «login:» prompt." ],
		"gpm"               =>	[ "gpm - console mouse server", "" ],
		"inetd"             =>	[ "internet superserver", "inetd allows running one daemon to invoke several others, reducing load on the system." ],
		"iptables"          =>	[ "administration tool for IPv4 packet filtering and NAT", "Iptables is used to set up, maintain, and inspect the tables of IP packet filter rules in the Linux kernel." ],
		"klogd"             =>	[ "Kernel Log Daemon", "klogd is a system daemon which intercepts and logs Linux kernel messages." ],
    "portmap"           =>  [ "DARPA port to RPC program number mapper", "Portmap is a server that converts RPC program numbers into DARPA protocol port numbers.  It must be running in order to make RPC calls." ],
    "postfix"           =>  [ "Mail Transport Agent", "" ],
		"postgresql"        =>	[ "database server", "" ],
    "ppp"               =>  [ "Point to Point Protocol daemon", "The  Point-to-Point Protocol (PPP) provides a method for transmitting datagrams over serial point-to-point links." ],
    "setserial"         =>  [ "get/set serial port information", "setserial is a program designed to set and/or report the configuration information associated with a serial port." ],
		"ssh"               =>	[ "OpenSSH SSH server", "ssh is a program for logging into a remote machine and for executing commands on a remote machine." ],
		"sysklogd"          =>	[ "Linux system logging utilities", "Sysklogd provides two system utilities which provide support for system  logging  and  kernel  message  trapping." ],
		"urandom"           =>	[ "kernel random number source devices", "The  random  number  generator  gathers environmental noise from device drivers and other sources into an entropy pool. From this entropy pool random numbers are created." ],
    "vmware"            =>  [ "Intel(TM) x86(TM)-based virtual machine", "The vmware command starts an Intel X86-based virtual machine. This script manages the services needed to run VMware software." ],
    "xfs"               =>	[ "X font server", "Xfs is the X Window System font server. It supplies fonts to X Window System display servers." ]
	);

	$desc = $service_description_list{$service};
	return @$desc;	
}


# This function determines if a service is "forbidden" or not (if runlevel-admin must show it or not)
sub xst_service_list_service_is_forbidden
{
	my ($service) = @_;
	my (%service_forbidden_list);
	my ($ret);
	
	# This is the hash that contains all the "forbidden" services
	%service_forbidden_list =
	(
		# TODO: we ought to separate the services depending on the distro that uses them
	
		# These are the forbidden services I found in Red Hat
		"halt" => 1,
		"functions" => 1,
		"killall" => 1,
	
		# These are the forbidden services I found in Debian Woody	
		"single" => 1,
		"sendsigs" => 1,
		"reboot" => 1,
		"rcS" => 1,
		"modutils" => 1,
		"hostname.sh" => 1,
		#"halt" => 1 in debian too
		"devpts.sh" => 1,
		"console-screen.sh" => 1,
		"checkroot" => 1,
		"checkfs" => 1,
		"bootmisc.sh" => 1,
		"checkfs.sh" => 1
	);
	
	$ret = $service_forbidden_list{$service};
	return $ret;
}
	



1;
